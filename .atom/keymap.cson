# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'atom-text-editor':
  'alt-l': 'editor:split-selections-into-lines'
  'alt-ctrl-b': 'seeing-is-believing:annotate-document'
  'alt-ctrl-n': 'seeing-is-believing:annotate-magic-comments'
  'alt-ctrl-v': 'seeing-is-believing:remove-annotations'

'body':
  'ctrl-tab ^ctrl': 'unset!'
  'ctrl-tab': 'pane:show-next-item'
  'ctrl-shift-tab ^ctrl': 'unset!'
  'ctrl-shift-tab': 'pane:show-previous-item'

# For Windows and Linux
'.platform-win32, .platform-linux':
  # Create an empty split pane
  'ctrl-k left':  'pane:split-left'
  'ctrl-k right': 'pane:split-right'
  'ctrl-k up':    'pane:split-up'
  'ctrl-k down':  'pane:split-down'

  # Create a split pane with the current pane item moved into it
  'ctrl-k m left':  'pane:split-left-and-move-active-item'
  'ctrl-k m right': 'pane:split-right-and-move-active-item'
  'ctrl-k m up':    'pane:split-up-and-move-active-item'
  'ctrl-k m down':  'pane:split-down-and-move-active-item'
